{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "defaultValue": "fantasyhelper",
      "metadata": {
        "description": "Prefix for all resource names"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "westus2",
      "allowedValues": [
        "westus2",
        "centralus", 
        "eastus2",
        "westeurope",
        "eastasia"
      ],
      "metadata": {
        "description": "Location for all resources (must support Static Web Apps)"
      }
    },
    "cosmosDatabaseName": {
      "type": "string",
      "defaultValue": "fantasy_helper",
      "metadata": {
        "description": "Name of the Cosmos DB database"
      }
    },
    "functionAppSku": {
      "type": "string",
      "defaultValue": "Y1",
      "allowedValues": ["Y1"],
      "metadata": {
        "description": "Function App SKU (Y1 for Consumption)"
      }
    },
    "aadTenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Azure AD Tenant ID for Static Web App authentication (auto-detected from current subscription)"
      }
    },
    "swaAppLocation": {
      "type": "string",
      "defaultValue": "admin",
      "metadata": {
        "description": "Source location for Static Web App"
      }
    },
    "swaOutputLocation": {
      "type": "string",
      "defaultValue": "admin",
      "metadata": {
        "description": "Output location for Static Web App"
      }
    },
    "enableKeyVault": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Enable Key Vault for secret management (not free tier)"
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(take(parameters('namePrefix'), 8), 'stor', take(uniqueString(resourceGroup().id), 8))]",
    "functionAppName": "[concat(take(parameters('namePrefix'), 8), 'func', take(uniqueString(resourceGroup().id), 8))]",
    "staticWebAppName": "[concat(take(parameters('namePrefix'), 8), 'admin', take(uniqueString(resourceGroup().id), 8))]",
    "keyVaultName": "[concat(take(parameters('namePrefix'), 8), 'kv', take(uniqueString(resourceGroup().id), 8))]",
    "cosmosAccountName": "[concat(take(parameters('namePrefix'), 8), 'cosmos', take(uniqueString(resourceGroup().id), 8))]",
    "functionAppIdentity": "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2"
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2023-04-15",
      "name": "[variables('cosmosAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "databaseAccountOfferType": "Standard"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2023-04-15",
      "name": "[concat(variables('cosmosAccountName'), '/', parameters('cosmosDatabaseName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDatabaseName')]"
        }
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2023-04-15",
      "name": "[concat(variables('cosmosAccountName'), '/', parameters('cosmosDatabaseName'), '/leagues')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), parameters('cosmosDatabaseName'))]"
      ],
      "properties": {
        "resource": {
          "id": "leagues",
          "partitionKey": {
            "paths": ["/id"],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": []
          }
        },
        "options": {
          "throughput": 400
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-02-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [],
        "enableRbacAuthorization": true
      },
      "condition": "[parameters('enableKeyVault')]"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(variables('functionAppName'), 'Plan'))]",
        "siteConfig": {
          "linuxFxVersion": "Python|3.10",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "COSMOS_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))).documentEndpoint]"
            },
            {
              "name": "COSMOS_KEY",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName')), '2023-04-15').primaryMasterKey]"
            },
            {
              "name": "COSMOS_DB",
              "value": "[parameters('cosmosDatabaseName')]"
            },
            {
              "name": "YAHOO_CLIENT_ID",
              "value": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/YAHOO-CLIENT-ID/)'), '')]"
            },
            {
              "name": "YAHOO_CLIENT_SECRET",
              "value": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/YAHOO-CLIENT-SECRET/)'), '')]"
            },
            {
              "name": "YAHOO_REDIRECT_URI",
              "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/api/auth/yahoo/callback')]"
            },
            {
              "name": "GOOGLE_CLIENT_ID",
              "value": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/GOOGLE-CLIENT-ID/)'), '')]"
            },
            {
              "name": "GOOGLE_CLIENT_SECRET",
              "value": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/GOOGLE-CLIENT-SECRET/)'), '')]"
            },
            {
              "name": "GMAIL_REDIRECT_URI",
              "value": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/api/auth/google/callback')]"
            },
            {
              "name": "OPENAI_API_KEY",
              "value": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/OPENAI-API-KEY/)'), '')]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('functionAppName'), 'Plan')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('functionAppSku')]",
        "tier": "Dynamic"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[concat(variables('functionAppName'), '/appsettings')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ],
      "properties": {
        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]",
        "WEBSITE_CONTENTSHARE": "[toLower(variables('functionAppName'))]",
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "FUNCTIONS_WORKER_RUNTIME": "python",
        "WEBSITE_RUN_FROM_PACKAGE": "1",
        "COSMOS_ENDPOINT": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))).documentEndpoint]",
        "COSMOS_KEY": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName')), '2023-04-15').primaryMasterKey]",
        "COSMOS_DB": "[parameters('cosmosDatabaseName')]",
        "YAHOO_CLIENT_ID": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/YAHOO-CLIENT-ID/)'), '')]",
        "YAHOO_CLIENT_SECRET": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/YAHOO-CLIENT-SECRET/)'), '')]",
        "YAHOO_REDIRECT_URI": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/api/auth/yahoo/callback')]",
        "GOOGLE_CLIENT_ID": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/GOOGLE-CLIENT-ID/)'), '')]",
        "GOOGLE_CLIENT_SECRET": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/GOOGLE-CLIENT-SECRET/)'), '')]",
        "GMAIL_REDIRECT_URI": "[concat('https://', variables('functionAppName'), '.azurewebsites.net/api/auth/google/callback')]",
        "OPENAI_API_KEY": "[if(parameters('enableKeyVault'), concat('@Microsoft.KeyVault(SecretUri=https://', variables('keyVaultName'), '.vault.azure.net/secrets/OPENAI-API-KEY/)'), '')]"
      }
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "name": "[guid(resourceGroup().id, 'KeyVaultSecretsUser')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      ],
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('functionAppName'))).identity.principalId]",
        "scope": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
      },
      "condition": "[parameters('enableKeyVault')]"
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2022-03-01",
      "name": "[variables('staticWebAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "repositoryUrl": "https://github.com/DaveOchoa/FantasySportsHelper",
        "branch": "main",
        "buildProperties": {
          "appLocation": "[parameters('swaAppLocation')]",
          "outputLocation": "[parameters('swaOutputLocation')]"
        }
      }
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[variables('staticWebAppName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "cosmosAccountName": {
      "type": "string",
      "value": "[variables('cosmosAccountName')]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    }
  }
}
